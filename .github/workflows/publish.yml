name: Publish Package

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.14'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Extract Version from Tag
        id: extract_version
        run: |
          echo "Extracting version from tag..."
          # Extract version number from the tag
          tag=${GITHUB_REF##*/}
          version=${tag#v}
          if [[ ! $version =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid tag format. Expected 'vX.Y.Z'"
            exit 1
          fi
          echo "version=$version" >> $GITHUB_ENV

      - name: Update version
        run: |
          echo "Bumping version to ${{ env.version }}..."
          python scripts/bump_version.py ${{ env.version }}

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload dist/*

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pyparsec-artifacts
          path: dist/*


      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
